from z3 import Ints
from sympy import symbols, Rational

def build_FDI():
    m12, m13, m33, n, m = symbols("m12 m13 m33 n m", integer=True)
    FDI = {
        "G1": -4 * m12 - 3 * m13 + m33 - 5 * m + 6 * n,
        "G2": m12,
        "G3": m13,
        "G4": m12 + m13 - m33 - 3 * n + 3 * m,
        "G5": m33,
        "G6": 2 * m12 + m13 - m33 - 3 * n + 3 * m - 1,
        "G7": (n - 4) * m12 + (n - 2) / 2 * m13 - (n - 4) / 2 * m33 + n - 5,
        "G7b": (3 * n - 2 * m) * m12
        + (3 * n / 2 - m + 1) * m13
        - (3 * n / 2 - m) * m33
        - 3 * m**2
        + (15 * n / 2 + 1) * m
        - (9 * n**2 + 3 * n) / 2,
        "G8": -2 * m12 - m13 - 4 * m / 3 + 2 * n - Rational(2, 3),
        "G9": -m12 - 2 * m / 3 + n - Rational(2, 3),
        "G10": -2 * m12 - 2 * m13 + m33 - 10 * m / 3 + 4 * n - Rational(2, 3),
        "G11": -m12 - m13 + m33 - 5 * m / 3 + 2 * n - Rational(2, 3),
        "G12": -3 * m12 - 2 * m13 + m33 - 15 * m / 4 + 9 * n / 2 - Rational(3, 4),
        "G13": -m12 + m33 - 5 * m / 4 + 3 * n / 2 - Rational(3, 4),
        "G14": -2 * m12 - m13 + m33 - 5 * m / 2 + 3 * n - 1,
        "G15": (n - 7) * m12 + (n - 6) * m13 - (n - 4) * m33 - 2 * n + 14,
        "G16": 2 * m12 + 2 * m13 - m33 + 1,
        "G17": (n - 4) * m12 + (n - 4) / 2 * m13 - (n - 6) / 2 * m33 - 2 * n + 8,
        "G18": (n - 2) * m12 + (n - 3) / 2 * m13 - (n - 1) / 2 * m33,
        "G19": (n - 9) * m12 + (n - 6) * m13 - (n - 6) * m33 - 2 * n + 18,
        "G20": (2 * n - 16) * m12
        + (2 * n - 13) * m13
        - (2 * n - 10) * m33
        - 4 * n
        + 32,
        "G21a": 2 * m13 - 4 * m33,
        "G21b": 4 * m13 - 4 * m33,
        "G21c": 2 * m12 + 5 * m13 - 4 * m33,
        "G21d": 2 * m12 + 8 * m13 - 4 * m33,
    }
    return FDI

FDI = build_FDI()

def build_GENERAL_CONDS():
    n, m = Ints("n m")
    return [n >= 0, m >= 12, m >= n-1, 2*m+3 <= 3*n]

GENERAL_CONDS = build_GENERAL_CONDS()

def build_FAMILIES():
    n, m = Ints("n m")
    return [
        (["G1", "G2", "G3", "G5", "G9", "G11", "G12", "G15", "G17", "G19"], [n % 12 == 0, m == n-1]),
        (["G1", "G2", "G3", "G5", "G6", "G14", "G15"], [n % 12 == 1, m == n-1]),
        (["G1", "G2", "G3", "G5", "G8", "G10", "G13", "G15", "G17", "G20"], [n % 12 == 2, m == n-1]),
        (["G1", "G2", "G3", "G5", "G6", "G9", "G11", "G15", "G19"], [n % 12 == 3, m == n-1]),
        (["G1", "G2", "G3", "G5", "G12", "G15", "G17"], [n % 12 == 4, m == n-1]),
        (["G1", "G2", "G3", "G5", "G6", "G8", "G10", "G14", "G15", "G20"], [n % 12 == 5, m == n-1]),
        (["G1", "G2", "G3", "G5", "G9", "G11", "G13", "G15", "G17", "G19"], [n % 12 == 6, m == n-1]),
        (["G1", "G2", "G3", "G5", "G6", "G15"], [n % 12 == 7, m == n-1]),
        (["G1", "G2", "G3", "G5", "G8", "G10", "G12", "G15", "G17", "G20"], [n % 12 == 8, m == n-1]),
        (["G1", "G2", "G3", "G5", "G6", "G9", "G11", "G14", "G15", "G19"], [n % 12 == 9, m == n-1]),
        (["G1", "G2", "G3", "G5", "G13", "G15", "G17"], [n % 12 == 10, m == n-1]),
        (["G1", "G2", "G3", "G5", "G6", "G8", "G10", "G15", "G20"], [n % 12 == 11, m == n-1]),

        (["G1", "G2", "G3", "G4", "G5"], [n % 12 == 0, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G8", "G10", "G12", "G18"], [n % 12 == 1, m == n]),
        # (["G1", "G2", "G3", "G4", "G5", "G9", "G11", "G14", "G18"], [n % 12 == 2, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G9", "G11", "G14"], [n % 12 == 2, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G13", "G18"], [n % 12 == 3, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G8", "G10"], [n % 12 == 4, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G9", "G11", "G12", "G18"], [n % 12 == 5, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G14"], [n % 12 == 6, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G8", "G10", "G13", "G18"], [n % 12 == 7, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G9", "G11"], [n % 12 == 8, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G12", "G18"], [n % 12 == 9, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G8", "G10", "G14"], [n % 12 == 10, m == n]),
        (["G1", "G2", "G3", "G4", "G5", "G9", "G11", "G13", "G18"], [n % 12 == 11, m == n]),

        (["G1", "G2", "G3", "G4", "G5", "G7", "G8", "G10", "G13", "G16"], [n % 12 == 0, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11", "G16"], [n % 12 == 1, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G7", "G12", "G16"], [n % 12 == 2, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G8", "G10", "G14", "G16"], [n % 12 == 3, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G7", "G9", "G11", "G13", "G16"], [n % 12 == 4, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G16"], [n % 12 == 5, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G7", "G8", "G10", "G12", "G16"], [n % 12 == 6, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11", "G14", "G16"], [n % 12 == 7, m == n+1]),
        # (["G1", "G2", "G3", "G4", "G5", "G7", "G8", "G13", "G16"], [n % 12 == 8, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G7", "G13", "G16"], [n % 12 == 8, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G8", "G10", "G16"], [n % 12 == 9, m == n+1]),
        # (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11", "G12", "G16"], [n % 12 == 10, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G7", "G9", "G11", "G12", "G16"], [n % 12 == 10, m == n+1]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G14", "G16"], [n % 12 == 11, m == n+1]),


        (["G1", "G2", "G3", "G4", "G5", "G7b"], [n%2==0, m%3==0, (m-2*n)%4==0, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G13"], [n%2==0, m%3==0, (m-2*n)%4==1, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G14"], [n%2==0, m%3==0, (m-2*n)%4==2, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G12"], [n%2==0, m%3==0, (m-2*n)%4==3, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G8", "G10"], [n%2==0, m%3==1, (m-2*n)%4==0, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G8", "G10", "G13"], [n%2==0, m%3==1, (m-2*n)%4==1, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G8", "G10", "G14"], [n%2==0, m%3==1, (m-2*n)%4==2, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G8", "G10", "G12"], [n%2==0, m%3==1, (m-2*n)%4==3, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G9", "G11"], [n%2==0, m%3==2, (m-2*n)%4==0, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G9", "G11", "G13"], [n%2==0, m%3==2, (m-2*n)%4==1, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G9", "G11", "G14"], [n%2==0, m%3==2, (m-2*n)%4==2, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G7b", "G9", "G11", "G12"], [n%2==0, m%3==2, (m-2*n)%4==3, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6"], [n%2==1, m%3==0, (m-2*n)%4==0, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G13"], [n%2==1, m%3==0, (m-2*n)%4==1, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G14"], [n%2==1, m%3==0, (m-2*n)%4==2, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G12"], [n%2==1, m%3==0, (m-2*n)%4==3, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G8", "G10"], [n%2==1, m%3==1, (m-2*n)%4==0, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G8", "G10", "G13"], [n%2==1, m%3==1, (m-2*n)%4==1, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G8", "G10", "G14"], [n%2==1, m%3==1, (m-2*n)%4==2, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G8", "G10", "G12"], [n%2==1, m%3==1, (m-2*n)%4==3, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11"], [n%2==1, m%3==2, (m-2*n)%4==0, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11", "G13"], [n%2==1, m%3==2, (m-2*n)%4==1, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11", "G14"], [n%2==1, m%3==2, (m-2*n)%4==2, n+1 < m, 5*m+3 < 6*n]),
        (["G1", "G2", "G3", "G4", "G5", "G6", "G9", "G11", "G12"], [n%2==1, m%3==2, (m-2*n)%4==3, n+1 < m, 5*m+3 < 6*n]),

        (["G1", "G2", "G3", "G4", "G7b", "G13"], [n%2==0, m%3==0,6*n<=5*m+3,5*m<6*n]),
        (["G1", "G2", "G3", "G4", "G7b", "G8", "G12"], [n%2==0, m%3==1,6*n<=5*m+3,5*m<6*n]),
        (["G1", "G2", "G3", "G4", "G7b", "G9", "G14"], [n%2==0, m%3==2,6*n<=5*m+3,5*m<6*n]),
        (["G1", "G2", "G3", "G4", "G6", "G13"], [n%2==1, m%3==0,6*n<=5*m+3,5*m<6*n]),
        (["G1", "G2", "G3", "G4", "G6", "G8", "G12"], [n%2==1, m%3==1,6*n<=5*m+3,5*m<6*n]),
        (["G1", "G2", "G3", "G4", "G6", "G9", "G14"], [n%2==1, m%3==2,6*n<=5*m+3,5*m<6*n]),

        (["G1", "G2", "G3", "G4", "G7b"], [n%2==0, m%3==0,6*n<=5*m,2*m+4<3*n]),
        (["G1", "G2", "G3", "G4", "G7b", "G8"], [n%2==0, m%3==1,6*n<=5*m,2*m+4<3*n]),
        (["G1", "G2", "G3", "G4", "G7b", "G9"], [n%2==0, m%3==2,6*n<=5*m,2*m+4<3*n]),
        (["G1", "G2", "G3", "G4", "G6"], [n%2==1, m%3==0,6*n<=5*m,2*m+4<3*n]),
        (["G1", "G2", "G3", "G4", "G6", "G8"], [n%2==1, m%3==1,6*n<=5*m,2*m+4<3*n]),
        (["G1", "G2", "G3", "G4", "G6", "G9"], [n%2==1, m%3==2,6*n<=5*m,2*m+4<3*n]),

        (["G1", "G2", "G3", "G6"], [m%3==0,3*n/2-2<=m]),
        (["G1", "G2", "G3", "G7b", "G8"], [m%3==1,(3*n-n%2)/2-2<=m]),
        (["G1", "G2", "G3", "G6", "G9"], [m%3==2,3*n/2-2<=m]),
    ]

FAMILIES = build_FAMILIES()
